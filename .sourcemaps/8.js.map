{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACa;AACN;AAEZ;AAcpC,IAAa,eAAe;IAA5B;IAA+B,CAAC;IAAD,sBAAC;AAAD,CAAC;AAAnB,eAAe;IAZ3B,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,yDAAS;SACV;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;YACnC,4EAAe,CAAC,QAAQ,EAAE;SAC3B;QACD,OAAO,EAAE;YACP,yDAAS;SACV;KACF,CAAC;GACW,eAAe,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;AClBc;AACa;AACmB;AAEzB;AACb;AACpC,KAAK;AAC6C;AAQlD,IAAa,SAAS;IAYpB,mBAAmB,OAAsB,EAChC,IAAU,EACV,SAA0B,EAC1B,gBAAkC,EAClC,WAA8B;QAJvC,iBASE;QATiB,YAAO,GAAP,OAAO,CAAe;QAChC,SAAI,GAAJ,IAAI,CAAM;QACV,cAAS,GAAT,SAAS,CAAiB;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAAmB;QAfvC,yCAAyC;QACzC,iEAAiE;QACjE,6BAA6B;QAC7B,YAAO,GAA2C;YAChD,QAAQ,EAAE,kBAAkB;YAC5B,QAAQ,EAAE,MAAM;SACjB,CAAC;QAWA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACvD,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC,CAAC;IACJ,CAAC;IAEF,+CAA+C;IAC/C,2BAAO,GAAP;QAAA,iBA0BC;QAzBC,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAC,OAAO,EAAG,4BAA4B,EAAC,CAAC,CAAC;QAChF,OAAO,CAAC,OAAO,EAAE,CAAC;QAClB,sFAAsF;QACtF,4BAA4B;QAC5B,MAAM;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC3C,EAAE,EAAC,IAAI,CAAC,EAAC;gBACN,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBACjB,4FAA4F;YAChG,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wDAAQ,CAAC,CAAC;YAC3B,OAAO,CAAC,UAAU,EAAE,CAAC;QACxB,CAAC,EAAE,UAAC,GAAG;YACL,8BAA8B;YAC9B,mBAAmB;YACnB,OAAO,CAAC,UAAU,EAAE,CAAC;YACrB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,OAAO,EAAE,KAAI,CAAC,gBAAgB;gBAC9B,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IACH,gBAAC;AAAD,CAAC;AAnDY,SAAS;IALrB,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,YAAY;OACG;KAC1B,CAAC;2EAayC;QAC1B,sEAAI;QACC,6EAAe;QACR,wEAAgB;QACrB,MAAiB;AAmCxC;SAnDY,SAAS,e","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController } from 'ionic-angular';\n\nimport { User } from '../../providers/providers';\nimport { MainPage } from '../pages';\n/////\nimport { LoadingController } from 'ionic-angular';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage {\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n  account: { username: string, password: string } = {\n    username: 'test@example.com',\n    password: 'test'\n  };\n  token: any;\n  // Our translated text strings\n  private loginErrorString: string;\n\n  constructor(public navCtrl: NavController,\n    public user: User,\n    public toastCtrl: ToastController,\n    public translateService: TranslateService,\n    public loadingCtrl: LoadingController) {\n\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n      this.loginErrorString = value;\n    });\n   }\n\n  // Attempt to login in through our User service\n  doLogin() {\n    let loading = this.loadingCtrl.create({content : \"Logging in ,please wait...\"});\n    loading.present();\n    // this.auth.login('basic', {'email':this.email, 'password':this.password}).then(()=>{\n    //     loading.dismissAll();\n    // });\n    console.log(this.account.username)\n    this.user.login(this.account).subscribe((resp) => {\n      if(resp){\n         this.token = resp;\n          //localStorage.setItem('currentUser', JSON.stringify({ username: username, token: token }));\n      }\n      console.log(resp)\n      this.navCtrl.push(MainPage);\n       loading.dismissAll();\n    }, (err) => {\n      //this.navCtrl.push(MainPage);\n      // Unable to log in\n      loading.dismissAll();\n      let toast = this.toastCtrl.create({\n        message: this.loginErrorString,\n        duration: 3000,\n        position: 'top'\n      });\n      toast.present();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}